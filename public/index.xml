<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>别人打药我拽管</title><link>https://net.chenayin.com/</link><description>Recent content on 别人打药我拽管</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Thu, 17 Jul 2025 20:00:49 +0800</lastBuildDate><atom:link href="https://net.chenayin.com/index.xml" rel="self" type="application/rss+xml"/><item><title>别怪 AI，杀死软件工程师黄金时代的，是互联网的普及</title><link>https://net.chenayin.com/docs/%E6%97%A5%E5%B8%B8/%E5%91%8A%E5%88%AB%E4%BB%A3%E7%A0%81%E5%B7%A5%E4%BA%BA/</link><pubDate>Thu, 17 Jul 2025 20:00:49 +0800</pubDate><guid>https://net.chenayin.com/docs/%E6%97%A5%E5%B8%B8/%E5%91%8A%E5%88%AB%E4%BB%A3%E7%A0%81%E5%B7%A5%E4%BA%BA/</guid><description>&lt;p>过去 25 年，从互联网到移动互联网的浪潮，创造了海量的工程需求，软件工程师也因此成为了时代的宠儿。但现在，这波巨大的增长红利期已经结束。&lt;/p>
&lt;p>那下一个浪潮是什么？文章给出了答案：&lt;strong>Agentic AI (智能体 AI)&lt;/strong>。&lt;/p>
&lt;p>这不仅仅是一个新技术，它将彻底重塑我们的工作方式，重写“软件工程师”这个岗位的核心要求。这不是一次普通的更新，这是一场彻底的进化。&lt;/p>
&lt;h2 id="告别代码工人拥抱智能体工程师">告别“代码工人”，拥抱“智能体工程师” &lt;a href="#%e5%91%8a%e5%88%ab%e4%bb%a3%e7%a0%81%e5%b7%a5%e4%ba%ba%e6%8b%a5%e6%8a%b1%e6%99%ba%e8%83%bd%e4%bd%93%e5%b7%a5%e7%a8%8b%e5%b8%88" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>文章预言，软件工程师不会被淘汰，而是将进化，去“驾驭”这波新的 AI 浪潮。我们将成为所谓的 &lt;strong>“智能体软件工程师” (Agentic Software Engineer)&lt;/strong>。&lt;/p>
&lt;p>在这个新角色下，我们的工作不再是整天埋头编写成千上万行代码。AI Agent 可以比我们更快、更不知疲倦地完成这项任务。我们的核心职责，将转变为：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>一个指挥、协调、审查和运维 AI Agent 军团的专家。&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>我们从亲自下场比赛的“运动员”，变成了运筹帷幄的“教练”。&lt;/p>
&lt;h2 id="ai-时代的生存指南你的技能升级清单">AI 时代的生存指南：你的技能升级清单 &lt;a href="#ai-%e6%97%b6%e4%bb%a3%e7%9a%84%e7%94%9f%e5%ad%98%e6%8c%87%e5%8d%97%e4%bd%a0%e7%9a%84%e6%8a%80%e8%83%bd%e5%8d%87%e7%ba%a7%e6%b8%85%e5%8d%95" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>那么，要成为一名合格的“智能体软件工程师”，我们需要点亮哪些新的技能树？文章为我们梳理了一份极其宝贵的“技能升值/贬值清单”。&lt;/p>
&lt;h3 id="技能升值-skills这-6-项能力将是你未来的护城河">技能升值 (Skills++)：这 6 项能力将是你未来的护城河 &lt;a href="#%e6%8a%80%e8%83%bd%e5%8d%87%e5%80%bc-skills%e8%bf%99-6-%e9%a1%b9%e8%83%bd%e5%8a%9b%e5%b0%86%e6%98%af%e4%bd%a0%e6%9c%aa%e6%9d%a5%e7%9a%84%e6%8a%a4%e5%9f%8e%e6%b2%b3" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;ul>
&lt;li>版本控制 (Version Control)&lt;/li>
&lt;/ul>
&lt;p>Git 不再仅仅是你个人的代码管理工具，它将成为&lt;strong>协调你与成百上千个“AI 码农”协同工作的核心骨干&lt;/strong>。你需要用它来管理 Agent 的并行工作流、审查 Agent 提交的 PR、以及在 Agent 犯错时进行回滚。精通 Git 模型，将是从业基础。&lt;/p>
&lt;ul>
&lt;li>产品思维 (“Product”)&lt;/li>
&lt;/ul>
&lt;p>AI Agent 擅长执行，但前提是指令必须清晰。&lt;strong>任务分解、需求定义、接口设计&lt;/strong>等产品经理的核心技能，将成为每个工程师的必备能力。如果你无法将一个模糊的想法拆解成 Agent 可以处理的、足够小的任务块，你将无法与 Agent 高效协作。&lt;/p>
&lt;ul>
&lt;li>代码审查 (Code Review)&lt;/li>
&lt;/ul>
&lt;p>这是未来我们耗时最多的日常工作。当 Agent 可以在 10 分钟内生成 500 行复杂的代码时，你的价值就体现在审查这些代码的正确性、可维护性和安全性上。&lt;strong>接受吧，你正在从一个 Code Writer 变成一个 Code Editor。&lt;/strong>&lt;/p></description></item><item><title>Python学习笔记</title><link>https://net.chenayin.com/docs/python/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://net.chenayin.com/docs/python/python/</guid><description>&lt;blockquote>
&lt;p>笔者为 Javaer 所以仅记录和Java语言的不同之处，方便快速学习&lt;/p>&lt;/blockquote>
&lt;h2 id="基础数据类型">基础数据类型 &lt;a href="#%e5%9f%ba%e7%a1%80%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>数字&lt;/li>
&lt;/ul>
&lt;p>bool（布尔型）：True | False&lt;/p>
&lt;blockquote>
&lt;p>笔者按： 布尔值要驼峰命令&lt;/p>&lt;/blockquote>
&lt;p>complex （复数），如 1 + 2j、 1.1 + 2.2j。&lt;/p>
&lt;blockquote>
&lt;p>笔者按： 已经忘记复数这个数学概念啦~&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>字符串&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>索引&lt;/li>
&lt;/ol>
&lt;p>字符串的组成元素为字符，每个字符在字符串中有对应的索引。&lt;/p>
&lt;blockquote>
&lt;p>和java不同的是，不光有正序索引，还有倒序索引&lt;/p>&lt;/blockquote>
&lt;p>





 



 
 
 &lt;img src="https://net.chenayin.com/image-20250725122701207_6890670413197233091.png" alt="image-20250725122701207" width="931" height="443" loading="lazy">
 
 
&lt;/p>
&lt;ol start="2">
&lt;li>截取&lt;/li>
&lt;/ol>
&lt;p>字符串的截取，都是 前闭后开 或者 叫 含头不含尾&lt;/p>
&lt;blockquote>
&lt;p>python字符串的截取和索引强相关；&lt;/p>
&lt;p>但又因为有正序和倒序，两排索引，所以截取时非常灵活，使用时也要谨慎&lt;/p>&lt;/blockquote>
&lt;p>





 



 
 
 &lt;img src="https://net.chenayin.com/image-20250725124333658_17956901840035152325.png" alt="image-20250725124333658" width="955" height="777" loading="lazy">
 
 
&lt;/p>
&lt;blockquote>
&lt;p>图片来自网络，倒数第二个例子有点奇怪： 描述和结果都不对；要实现输出结果ab，可通过如下方式&lt;/p>


 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(str[:&lt;span style="color:#ae81ff">2&lt;/span>]) &lt;span style="color:#75715e"># ab&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[:&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>]) &lt;span style="color:#75715e"># ab&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>


 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>str&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;abcdefg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[&lt;span style="color:#ae81ff">1&lt;/span>:]) &lt;span style="color:#75715e"># bcdefg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[:&lt;span style="color:#ae81ff">5&lt;/span>]) &lt;span style="color:#75715e"># abcde&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[&lt;span style="color:#ae81ff">1&lt;/span>:&lt;span style="color:#ae81ff">5&lt;/span>]) &lt;span style="color:#75715e"># bcde&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>:]) &lt;span style="color:#75715e"># defg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>:&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>]) &lt;span style="color:#75715e"># 空字符串 是 &amp;#39;&amp;#39; 不是None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>:&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>]) &lt;span style="color:#75715e">#bcde&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[::&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]) &lt;span style="color:#75715e"># 字符串反转 gfedcba&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[:&lt;span style="color:#ae81ff">2&lt;/span>]) &lt;span style="color:#75715e"># ab&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str[:&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>]) &lt;span style="color:#75715e"># ab&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;ul>
&lt;li>列表&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>笔者按： 和Java中的数组特点一样； 最大最大的区别是 一个数组可以有不同类型的元素；&lt;/p></description></item></channel></rss>